# Tables & Figures in Quarto

Appendix for demonstrating complex tables & figures


```{r setup, include = FALSE}

library(yardstick) # for roc_curve
library(kableExtra)
library(janitor)
library(corx)
library(patchwork)
library(ggtext)
library(consort)
library(tidyverse)
library(tidymodels)
library(tidyposterior)
library(cowplot)

theme_set(theme_classic()) 
```


```{r paths}


switch (Sys.info()[['sysname']],
        # PC paths
        Windows = {
          path_models <- "P:/studydata/risk/models/ema"
          path_data_shared <- "P:/studydata/risk/data_processed/shared"
          path_data_ema <- "P:/studydata/risk/data_processed/ema"},
        # IOS paths
        Darwin = {
          path_models <- "/Volumes/private/studydata/risk/models/ema"
          path_data_shared <- "/Volumes/private/studydata/risk/data_processed/shared"
          path_data_ema <- "/Volumes/private/studydata/risk/data_processed/ema"}
       )
```

```{r load_data}
# Table data
disposition <- read_csv(file.path(path_data_ema, "disposition.csv"), col_types = "ccDDcccccccccc")
screen <- read_csv(file.path(path_data_shared, "screen.csv"), col_types = vroom::cols()) %>% 
  filter(subid %in% subset(disposition, analysis == "yes")$subid)

# Predictions data
preds_week<- readRDS(file.path(path_models, "resample_preds_best_all_1week_0_v4_kfold.rds"))
preds_day<- readRDS(file.path(path_models, "resample_preds_best_all_1day_0_v4_kfold.rds"))
preds_hour<- readRDS(file.path(path_models, "resample_preds_best_all_1hour_0_v4_kfold.rds")) 

# posterior probabilites
pp <- readRDS(file.path(path_models, "posteriors_all_allwindows_0_v4_kfold.rds"))

# ROC curves
roc_week <- preds_week %>% 
  roc_curve(prob, truth = truth) %>% 
  mutate(model = "1week")

roc_day <- preds_day %>% 
  roc_curve(prob, truth = truth) %>% 
  mutate(model = "1day")

roc_hour <- preds_hour%>% 
  roc_curve(prob, truth = truth) %>% 
  mutate(model = "1hour")

roc_all <- roc_week %>% 
  bind_rows(roc_day) %>% 
  bind_rows(roc_hour)

# PR curves
pr_week <- preds_week %>% 
  pr_curve(prob, truth = truth) %>% 
  mutate(model = "1week")

pr_day <- preds_day %>% 
  pr_curve(prob, truth = truth) %>% 
  mutate(model = "1day")

pr_hour <- preds_hour%>% 
  pr_curve(prob, truth = truth) %>% 
  mutate(model = "1hour")

pr_all <- pr_week %>% 
  bind_rows(pr_day) %>% 
  bind_rows(pr_hour)

# Grouped SHAPS
shap_grouped_week <- readRDS(file.path(path_models, "imp_shap_grouped_all_1week_0_v4.rds")) %>% 
  group_by(group) %>% 
  summarize(mean_value = mean(abs(shap)), .groups = "drop") %>% 
  arrange(mean_value)
shap_grouped_day <- readRDS(file.path(path_models, "imp_shap_grouped_all_1day_0_v4.rds")) %>% 
  group_by(group) %>% 
  summarize(mean_value = mean(abs(shap)), .groups = "drop") %>% 
  arrange(mean_value)
shap_grouped_hour <- readRDS(file.path(path_models, "imp_shap_grouped_all_1hour_0_v4.rds")) %>% 
  group_by(group) %>% 
  summarize(mean_value = mean(abs(shap)), .groups = "drop") %>% 
  arrange(mean_value)
```

<!-- Demographics table-->
```{r}

footnote_table_dem <- "N = 151"
```

```{r table_demo}
#| echo: false
#| warning: false

options(knitr.kable.NA = "")


dem <- screen %>% 
  summarise(mean = as.character(round(mean(dem_1, na.rm = TRUE), 1)),
            SD = as.character(round(sd(dem_1, na.rm = TRUE), 1)),
            min = as.character(min(dem_1, na.rm = TRUE)),
            max = as.character(max(dem_1, na.rm = TRUE))) %>% 
  mutate(var = "Age",
         n = as.numeric(""),
         perc = as.numeric("")) %>% 
  select(var, n, perc, everything()) %>% 
  full_join(screen %>% 
  select(var = dem_2) %>% 
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = dem_3) %>% 
  mutate(var = fct_relevel(factor(var, 
                         c("American Indian/Alaska Native", "Asian", "Black/African American",
                           "White/Caucasian", "Other/Multiracial")))) %>%
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = dem_4) %>% 
  mutate(var = case_when(var == "No, I am not of Hispanic, Latino, or Spanish origin" ~ "No",
                         TRUE ~ "Yes"),
         var = fct_relevel(factor(var, c("Yes", "No")))) %>% 
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = dem_5) %>% 
  mutate(var = fct_relevel(factor(var, 
                         c("Less than high school or GED degree", "High school or GED", 
                           "Some college", "2-Year degree", "College degree", "Advanced degree")))) %>%
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = dem_6, dem_6_1) %>% 
  mutate(var = case_when(dem_6_1 == "Full-time" ~ "Employed full-time",
                         dem_6_1 == "Part-time" ~ "Employed part-time",
                         TRUE ~ var)) %>% 
  mutate(var = fct_relevel(factor(var, 
                         c("Employed full-time", "Employed part-time", "Full-time student",
                           "Homemaker", "Disabled", "Retired", "Unemployed", 
                           "Temporarily laid off, sick leave, or maternity leave",
                           "Other, not otherwise specified")))) %>%
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  summarise(mean = format(round(mean(dem_7, na.rm = TRUE), 0), big.mark = ","),
            SD = format(round(sd(dem_7, na.rm = TRUE), 0), big.mark = ","),
            min =format(round(min(dem_7, na.rm = TRUE), 0), big.mark = ","),
            max = format(round(max(dem_7, na.rm = TRUE), 0), scientific = FALSE, big.mark = ",")) %>% 
  mutate(var = "Personal Income",
        n = as.numeric(""),
        perc = as.numeric(""),
        mean = str_c("$", as.character(mean)),
        SD = str_c("$", as.character(SD)),
        min = str_c("$", as.character(min)),
        max = as.character(max)) %>% 
  select(var, n, perc, everything()), by = c("var", "n", "perc", "mean", "SD", "min", "max")) %>% 
  full_join(screen %>% 
  select(var = dem_8) %>% 
  mutate(var = case_when(var == "Never Married" ~ "Never married",
                         TRUE ~ var)) %>% 
  mutate(var = fct_relevel(factor(var, 
                         c("Never married", "Married", "Divorced", "Separated",
                           "Widowed")))) %>%
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc"))

# display and format table
dem %>% 
  mutate(range = str_c(min, "-", max)) %>%
  select(-c(min, max)) %>% 
  kbl(longtable = TRUE,
      booktabs = TRUE,
      col.names = c("", "N", "%", "M", "SD", "Range"),
      align = c("l", "c", "c", "c", "c", "c"),
      digits = 1,
      caption = "Demographics") %>%
  kable_styling() %>% 
  row_spec(row = 0, align = "c", italic = TRUE) %>% 
  pack_rows("Sex", 2, 3, bold = FALSE) %>% 
  pack_rows("Race", 4, 8, bold = FALSE) %>% 
  pack_rows("Hispanic, Latino, or Spanish Origin", 9, 10, bold = FALSE) %>% 
  pack_rows("Education", 11, 16, bold = FALSE) %>% 
  pack_rows("Employment", 17, 25, bold = FALSE) %>% 
  pack_rows("Marital Status", 27, 31, bold = FALSE) %>% 
  footnote(general=footnote_table_dem, threeparttable = TRUE)
```

<!-- Alcohol Use History table-->
```{r}
footnote_table_auh_a <- "N = 151"
footnote_table_auh_b <- "Two participants reported 100 or more quit attempts. We removed these outliers prior to calculating the mean (M), standard deviation (SD), and range."
```

```{r table_auh}
auh <- screen %>% 
  summarise(mean = mean(auh_1, na.rm = TRUE),
            SD = sd(auh_1, na.rm = TRUE),
            min = min(auh_1, na.rm = TRUE),
            max = max(auh_1, na.rm = TRUE)) %>% 
  mutate(var = "Age of first drink",
        n = as.numeric(""),
        perc = as.numeric("")) %>% 
  select(var, n, perc, everything()) %>% 
  full_join(screen %>% 
  summarise(mean = mean(auh_2, na.rm = TRUE),
            SD = sd(auh_2, na.rm = TRUE),
            min = min(auh_2, na.rm = TRUE),
            max = max(auh_2, na.rm = TRUE)) %>% 
  mutate(var = "Age of regular drinking",
        n = as.numeric(""),
        perc = as.numeric("")) %>% 
  select(var, n, perc, everything()), by = c("var", "n", "perc", "mean", "SD", 
                                             "min", "max")) %>% 
  full_join(screen %>% 
  summarise(mean = mean(auh_3, na.rm = TRUE),
            SD = sd(auh_3, na.rm = TRUE),
            min = min(auh_3, na.rm = TRUE),
            max = max(auh_3, na.rm = TRUE)) %>% 
  mutate(var = "Age at which drinking became problematic",
        n = as.numeric(""),
        perc = as.numeric("")) %>% 
  select(var, n, perc, everything()), by = c("var", "n", "perc", "mean", "SD",
                                             "min", "max")) %>% 
  full_join(screen %>% 
  summarise(mean = mean(auh_4, na.rm = TRUE),
            SD = sd(auh_4, na.rm = TRUE),
            min = min(auh_4, na.rm = TRUE),
            max = max(auh_4, na.rm = TRUE)) %>% 
  mutate(var = "Age of first quit attempt",
        n = as.numeric(""),
        perc = as.numeric("")) %>% 
  select(var, n, perc, everything()), by = c("var", "n", "perc", "mean", "SD",
                                             "min", "max")) %>% 
  full_join(screen %>% 
  # filter out 2 people with 100 and 365 reported quit attempts - will make footnote in table
  filter(auh_5 < 100) %>% 
  summarise(mean = mean(auh_5, na.rm = TRUE),
            SD = sd(auh_5, na.rm = TRUE),
            min = min(auh_5, na.rm = TRUE),
            max = max(auh_5, na.rm = TRUE)) %>% 
  mutate(var = "Number of Quit Attempts*",
        n = as.numeric(""),
        perc = as.numeric("")) %>% 
  select(var, n, perc, everything()), by = c("var", "n", "perc", "mean", "SD",
                                             "min", "max")) %>% 
  full_join(screen %>% 
  select(var = auh_6_1) %>%
  mutate(var = case_when(var == "Long-Term Residential Treatment (more than 6 months)" ~ "Long-term residential (6+ months)",
                         TRUE ~ var)) %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_6_2) %>%
  mutate(var = case_when(var == "Short-Term Residential Treatment (less than 6 months)" ~ "Short-term residential (< 6 months)",
                         TRUE ~ var)) %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_6_3) %>%
  mutate(var = case_when(var == "Outpatient Treatment" ~ "Outpatient",
                         TRUE ~ var)) %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_6_4) %>%
  mutate(var = case_when(var == "Individual Counseling" ~ "Individual counseling",
                         TRUE ~ var)) %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_6_5) %>%
  mutate(var = case_when(var == "Group Counseling" ~ "Group counseling",
                         TRUE ~ var)) %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_6_6) %>%
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_6_7) %>%
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = auh_7) %>% 
  mutate(var = fct_relevel(factor(var, c("Yes", "No")))) %>%
  group_by(var) %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / sum(n)) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  mutate(across(dsm5_1:dsm5_11, ~ recode(., "No" = 0, "Yes" = 1))) %>% 
  rowwise() %>% 
  # calculate dsm5 score by adding up dsm5_1 through dsm5_11
  mutate(dsm5_total = sum(c(dsm5_1, dsm5_2, dsm5_3, dsm5_4, dsm5_5, dsm5_6, dsm5_7, 
                            dsm5_8, dsm5_9, dsm5_10, dsm5_11))) %>% 
  ungroup() %>% 
  summarise(mean = mean(dsm5_total),
            SD = sd(dsm5_total),
            min = min(dsm5_total, na.rm = TRUE),
            max = max(dsm5_total, na.rm = TRUE)) %>% 
  mutate(var = "Alcohol Use Disorder DSM-5 Symptom Count",
        n = as.numeric(""),
        perc = as.numeric("")) %>% 
  select(var, n, perc, everything()), by = c("var", "n", "perc", "mean", "SD",
                                             "min", "max")) %>% 
  full_join(screen %>% 
  select(var = assist_2_1) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Tobacco products (cigarettes, chewing tobacco, cigars, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_2) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Cannabis (marijuana, pot, grass, hash, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_3) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Cocaine (coke, crack, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_4) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Amphetamine type stimulants (speed, diet pills, ecstasy, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_5) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Inhalants (nitrous, glue, petrol, paint thinner, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_6) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Sedatives or sleeping pills (Valium, Serepax, Rohypnol, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_7) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Hallucinogens (LSD, acid, mushrooms, PCP, Special K, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) %>% 
  full_join(screen %>% 
  select(var = assist_2_8) %>%
  filter(var != "Never" & !is.na(var)) %>% 
  mutate(var = "Opioids (heroin, morphine, methadone, codeine, etc.)") %>% 
  group_by(var) %>% 
  drop_na() %>% 
  summarise(n = n()) %>% 
  mutate(perc = (n / 154) * 100), by = c("var", "n", "perc")) 

# display and format table
auh %>%
  mutate(range = str_c(min, "-", max)) %>%
  select(-c(min, max)) %>% 
  kbl(longtable = TRUE,
      booktabs = TRUE,
      col.names = c("", "N", "%", "M", "SD", "Range"),
      align = c("l", "c", "c", "c", "c", "c"),
      digits = 1,
      caption = "Alcohol Related Information") %>% 
  kable_styling() %>% 
  row_spec(row = 0, align = "c", italic = TRUE) %>% 
  pack_rows("Alcohol Use Disorder Milestones", 1, 4, bold = FALSE) %>% 
  pack_rows("Lifetime History of Treatment (Can choose more than 1)", 6, 12, bold = FALSE) %>% 
  pack_rows("Received Medication for Alcohol Use Disorder", 13, 14, bold = FALSE) %>% 
  pack_rows("Current (Past 3 Month) Drug Use", 16, 23, bold = FALSE) %>% 
  footnote(general=footnote_table_auh_a, symbol = c(footnote_table_auh_b), 
           threeparttable = TRUE)
```

\newpage

```{r}
footnote_table_perf_metrics <- "Insert footnote"
```

```{r table_metrics}
metrics_week <- preds_week %>%   
  conf_mat(truth, estimate) %>% 
  summary() %>% 
  mutate(.estimate = round(.estimate, 3)) %>% 
  rename(week = .estimate,
         metric = .metric) %>% 
  select(-.estimator)

metrics_day <- preds_day %>%   
  conf_mat(truth, estimate) %>% 
  summary() %>% 
  mutate(.estimate = round(.estimate, 3)) %>% 
  rename(day = .estimate,
         metric = .metric) %>% 
  select(-.estimator)

metrics_hour <- preds_hour %>%   
  conf_mat(truth, estimate) %>% 
  summary() %>% 
  mutate(.estimate = round(.estimate, 3)) %>% 
  rename(hour = .estimate,
         metric = .metric) %>% 
  select(-.estimator)

metrics <- metrics_week %>% 
  full_join(metrics_day, by = "metric") %>% 
  full_join(metrics_hour, by = "metric") %>% 
  filter(metric %in% c("accuracy", "sens", "spec", "ppv", "npv"))

auc <- tibble(metric = "auc", 
              week = preds_week %>% roc_auc(prob, truth = truth) %>%  
                pull(.estimate) %>% round(3), 
              day = preds_day %>% roc_auc(prob, truth = truth) %>%  
                pull(.estimate) %>% round(3),
              hour = preds_hour %>% roc_auc(prob, truth = truth) %>%  
                pull(.estimate) %>% round(3))

metrics <- metrics %>% 
  bind_rows(auc)

metrics <- metrics[c(6,1,2,3,4,5),]

metrics %>%
 kbl(col.names = c("Metric", "Week", "Day", "Hour"),
      booktabs = TRUE,
      digits = 3,
      align = c("l", "c", "c", "c"),
      caption = "Performance Metrics by Model") %>% 
  row_spec(row = 0, align = "c") %>% 
  kable_styling(position = "left") %>% 
  footnote(general=footnote_table_perf_metrics)
```

\clearpage




<!-- AUC figure by model w/posterior probabilities-->  
```{r caption_roc_pp}
fig_caption_roc_pp <- "Insert note here"
```

```{r fig_roc_pp, fig.cap = fig_caption_roc_pp, fig.height = 4.5, fig.width = 7}

roc_plot <- roc_all %>% 
  mutate(model = factor(model, levels = c("1week", "1day", "1hour"), 
                        labels = c("week", "day", "hour"))) %>% 
  ggplot(aes(x = 1 - specificity, y = sensitivity, color = model)) +
  geom_path() +
  geom_abline(lty = 3) +
  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
  labs(x = "Specificity",
       y = "Sensitivity") +
  scale_x_continuous(breaks = seq(0,1,.25),
    labels = sprintf("%.2f", seq(1,0,-.25))) +
  theme(legend.position = "none")

pp_tidy <- pp %>% 
  tidy(seed = 123)

ci <- pp_tidy %>% 
  summary() %>% 
  mutate(model = factor(model, levels = c("week", "day", "hour")),
         y = 1000)

pp_plot <- pp_tidy %>% 
  mutate(model = factor(model, levels = c("week", "day", "hour"))) %>%
  ggplot() + 
  geom_histogram(aes(x = posterior, fill = model), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y+100, yend = y-100, x = mean, xend = mean,
                           color = model),
               show.legend = FALSE,
               data = ci) +
  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper, color = model),
              show.legend = FALSE,
               data = ci) +
  geom_text(data = ci, x = c(.93, .907, .92), y = 1000, 
            label = str_c(round(ci$mean, 2), " [", round(ci$lower, 2), ", ", round(ci$upper, 2), "]")) +
  facet_wrap(~model, ncol = 1) +
  scale_y_continuous("Posterior Probability", breaks = c(0, 500, 1000)) +
  xlab("Area Under ROC Curve") +
  theme(strip.background = element_blank(),
        strip.text.x = element_blank(),
        legend.position = "bottom")

plot_grid(roc_plot, pp_plot, ncol = 2, rel_widths = c(1, 1.25))
```

<!-- Single AUC figure by model-->  
```{r caption_roc}
fig_caption_roc <- "Receiver Operating Characteritic Curves by Model  "
```

```{r fig_roc, fig.cap = fig_caption_roc, fig.height=7}

roc_all %>% 
  mutate(model = factor(model, levels = c("1week", "1day", "1hour"), 
                        labels = c("week", "day", "hour"))) %>% 
  ggplot(aes(x = 1 - specificity, y = sensitivity, color = model)) +
  geom_path() +
  geom_abline(lty = 3) +
  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
  labs(x = "Specificity",
       y = "Sensitivity") +
  scale_x_continuous(breaks = seq(0,1,.25),
    labels = sprintf("%.2f", seq(1,0,-.25)))
```


<!-- Single Posteriors for AUC by model with rope-->

```{r caption_pp}
fig_caption_pp <- "Posterior Probability Distributions for Area Under the ROC Curve by Model.  Horizontal lines represent 95 percent credible intervals for each model.  Verical line represents mean of the posteerior distribution."
```


```{r fig_pp, fig.cap = fig_caption_pp, fig.height=7}
pp_tidy <- pp %>% 
  tidy(seed = 123)

ci <- pp_tidy %>% 
  summary() %>% 
  mutate(model = factor(model, levels = c("week", "day", "hour")),
         y = 1000)

pp_tidy %>% 
  mutate(model = factor(model, levels = c("week", "day", "hour"))) %>%
  ggplot() + 
  geom_histogram(aes(x = posterior, fill = model), color = "black", alpha = .4, 
                 bins = 30) +
  geom_segment(mapping = aes(y = y+100, yend = y-100, x = mean, xend = mean,
                           color = model),
               show.legend = FALSE,
               data = ci) +
  geom_segment(mapping = aes(y = y, yend = y, x = lower, xend = upper, color = model),
              show.legend = FALSE,
               data = ci) +
  geom_text(data = ci, x = c(.925, .912, .915), y = 1000, 
            label = str_c(round(ci$mean, 2), " [", round(ci$lower, 2), ", ", round(ci$upper, 2), "]")) +
  facet_wrap(~model, ncol = 1) +
  scale_y_continuous("Posterior Probability", breaks = c(0, 500, 1000)) +
  xlab("Area Under ROC Curve") 
```


<!-- PR curve by model-->
<!-- get exact sensitivity at .75 PPV -->
```{r}
pr_.75_cutoff <- pr_all %>% 
  mutate(recall = round(recall, 3),
         precision = round(precision, 3),
         .threshold = round(.threshold, 3),
         model = factor(model,
                        levels = c("1week", "1day", "1hour"),
                        labels = c("week", "day", "hour"))) %>% 
  filter(precision == .75) %>% 
  group_by(model, precision) %>% 
  summarise(recall = mean(recall),
            threshold = mean(.threshold),
            .groups = "drop")
```

<!-- Week sensitivity at .75 PPV =  `r round(pull(subset(pr_.75_cutoff, model == "week"), recall), 3)` -->

<!-- Day sensitivity at .75 PPV =  `r round(pull(subset(pr_.75_cutoff, model == "day"), recall), 3)` -->

<!-- Hour sensitivity at .75 PPV =  `r round(pull(subset(pr_.75_cutoff, model == "hour"), recall), 3)` -->


```{r caption_pr}
fig_caption_pr <- "Precision-Recall Curves for models."
```

```{r fig_pr, fig.cap = fig_caption_pr, fig.height=7}
pr_all %>% 
  mutate(model = factor(model, levels = c("1week", "1day", "1hour"),
                        labels = c("week", "day", "hour"))) %>%
  ggplot(aes(x = recall, y = precision, color = model)) +
  geom_path() +
  geom_segment(mapping = aes(y = .75, yend = .75, x = -.5, xend = recall,
                           color = model),
               linetype = "dashed",
               alpha = .8,
               show.legend = FALSE,
               data = pr_.75_cutoff) +
  geom_segment(mapping = aes(y = -.5, yend = .75, x = recall, xend = recall,
                           color = model),
               linetype = "dashed",
               alpha = .8,
               show.legend = FALSE,
               data = pr_.75_cutoff) +
  coord_fixed(xlim = c(0, 1), ylim = c(0, 1)) +
  labs(x = "Sensitivity (Recall)",
       y = "Positive Predictive Value (Precision)")
```

<!-- SHAP Importance figure-->
```{r caption_shap}
fig_caption_shapgrouped <- "Variable Importance (SHAP Values) for each Model.  Raw EMA features are grouped by the original item from the EMA. Features from demographics and the day and hour for the start of the  prediction window are also included."
```

```{r fig_shap, fig.cap = fig_caption_shapgrouped, fig.height=7}
shap_grouped_all <- shap_grouped_week %>% 
  mutate(window = "week") %>% 
  bind_rows(shap_grouped_day %>% 
              mutate(window = "day")) %>% 
  bind_rows(shap_grouped_hour %>% 
              mutate(window = "hour")) %>% 
  mutate(window = factor(window, levels = c("week", "day", "hour"))) %>% 
  mutate(group = factor(group, levels = c("past use (EMA item)", 
                                          "craving (EMA item)", 
                                          "past risky situation (EMA item)", 
                                          "past stressful event (EMA item)", 
                                          "past pleasant event (EMA item)", 
                                          "valence (EMA item)", 
                                          "arousal (EMA item)", 
                                          "future risky situation (EMA item)", 
                                          "future stressful event (EMA item)", 
                                          "future efficacy (EMA item)",
                                          "lapse day (other)",
                                          "lapse hour (other)",
                                          "missing surveys (other)",
                                          "age (demographic)",
                                          "sex (demographic)",
                                          "race (demographic)",
                                          "marital (demographic)",
                                          "education (demographic)")))

shap_grouped_all %>% 
  mutate(group = reorder(group, mean_value, sum)) %>% 
  ggplot() +
  geom_bar(aes(x = group, y = mean_value, fill = window), stat = "identity", alpha = .4) +
  ylab("Mean |SHAP| value") +
  xlab("") +
  coord_flip()
```



